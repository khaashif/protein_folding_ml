#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Sep  3 16:07:42 2021

@author: khaashif
"""


import matplotlib.pyplot as plt

rank_percentiles = [1, 5, 10, 30, 40, 50, 60, 70, 80, 90, 95, 99, 100]

# PLease uncomment code block for which results you wish to plot


#%%
## NN and SVM - Excl 106
# tests = ["SVM", "NN"]

# rankscores = [
#             [14.52, 48.6, 99.2, 326.0, 528.4000000000001, 915.0, 1347.4, 1857.6, 2645.8, 3114.4, 3456.199999999999, 3773.799999999999, 3910.0]
#     ,      
#               [0.0, 1.0, 1.0, 8.0, 16.0, 64.0, 139.59999999999985, 266.19999999999993, 596.2000000000003, 1433.8000000000006, 2114.3999999999996, 2840.079999999997, 3336.0]
#     ]


#%%
## NN - Excl. vs Incl PROTACs in Training
# tests = ["Excl", "Incl"]

# rankscores = [
#               [0.0, 1.0, 1.0, 8.0, 16.0, 64.0, 139.59999999999985, 266.19999999999993, 596.2000000000003, 1433.8000000000006, 2114.3999999999996, 2840.079999999997, 3336.0]
# ,
# [0.0, 0.29000000000000004, 0.5800000000000001, 5.34, 9.4, 19.8, 38.92, 75.05999999999999, 157.16000000000008, 703.9000000000001, 1129.7499999999995, 1930.7899999999995, 2344.8]
#     ]
#%%
#(only for use in results table in dissertation)
## SVM Incl PROTCACS
#[0.0, 0.0, 0.6, 3.4, 4.4, 7.6, 12.639999999999999, 38.99999999999999, 76.88000000000002, 1570.92, 2421.6099999999997, 3395.0759999999996, 3536.4]
##SVM Excl PROTACs Regen=True; Ratio = 1
#[17.12, 59.800000000000026, 106.2, 281.6, 468.4000000000001, 861.0, 1459.8, 2312.7999999999984, 3256.4, 3664.6000000000004, 3808.4, 3931.3199999999997, 3969.0]

#%%
# NN - Regen = False vs = True with Ratio 1, 3, 5, 7...
# tests = ["Regen=False", "Regen True; Ratio = 1", "Regen True; Ratio = 3", "Regen True; Ratio = 5", "Regen True; Ratio = 7"]

# rankscores = [
#     [0.0, 1.0, 1.0, 8.0, 16.0, 64.0, 139.59999999999985, 266.19999999999993, 596.2000000000003, 1433.8000000000006, 2114.3999999999996, 2840.079999999997, 3336.0]
#     ,
#     [0.52, 1.0, 4.0, 15.0, 30.80000000000001, 59.0, 127.79999999999995, 339.5999999999998, 1390.6000000000017, 2738.000000000002, 3099.2, 3562.08, 3807.0]
#     ,
#     [0.0, 1.0, 3.0, 45.0, 113.60000000000002, 268.0, 548.5999999999999, 1026.5999999999997, 1690.0000000000014, 2586.2000000000003, 2904.5999999999995, 3697.4399999999987, 3905.0]
#     ,
#     [2.52, 11.0, 18.400000000000006, 138.99999999999997, 216.4000000000001, 366.0, 574.2, 1126.7999999999997, 1710.0000000000005, 2609.2000000000007, 3130.199999999999, 3410.879999999999, 3567.0]
#     ,
#     [6.0, 10.0, 32.2, 234.79999999999995, 381.6, 644.0, 906.2, 1562.7999999999997, 2322.8000000000006, 3279.8, 3586.3999999999996, 3855.6799999999994, 3911.0]
#     ]
#%%

title = 'NN Regen Values'
for x in rankscores:

    plt.plot(rank_percentiles, x, label = tests[rankscores.index(x)])
    plt.title(title)
    plt.legend(title='Classifier')
    plt.xlabel('Percentile')
    plt.ylabel("RFPP")
    
plt.show()

for x in rankscores:

    plt.plot(rank_percentiles[0:6], x[0:6], label = tests[rankscores.index(x)])
    plt.title(title)
    plt.legend(title='Classifier')
    plt.xlabel('Percentile')
    plt.ylabel('RFPP')
    
plt.show()
